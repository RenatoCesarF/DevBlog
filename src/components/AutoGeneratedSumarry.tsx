import Link from "next/link";

interface AutoGeneratedSumarryProps{
    content: string
}
interface TitleAnchorLink{
    href: string,
    name: string,
}

const symbolsToRemove = ["?", "/", "@", "+",".", "!", "%", "$", "(", ")", "*", "<", ">", "&"];

const AutoGeneratedSumarry = ({content}: AutoGeneratedSumarryProps) =>{   
    const titles = getPostTitles(content);
    const titleLinks: TitleAnchorLink[] = getTitleLinks(titles); 

    if(titleLinks.length == 0) return <></>;
    
    return(
        <>
        <div className="post-sumarry">
            <h3>Summary</h3>
            <ul>
                {titleLinks.map((anchor: TitleAnchorLink, index: number) => {
                    return (
                        <li key={index}>
                            <Link passHref href={"#" + anchor.href}>{anchor.name}</Link>
                        </li>
                    );
                })}
            </ul>
        </div></>
    );
}

const getPostTitles = (content: string) =>{
    const textLines = content.split('\n');
    const titles: string[] = [];
    textLines.map(((line: string) =>{
        if(line.startsWith("# ")){
            titles.push(line);
        }
    }));
    return titles;
}

const getTitleLinks = (titles: string[]): TitleAnchorLink[] =>{
    const titleLinks: TitleAnchorLink[] = [];
    titles.map((title: string) =>{
        const link = formatTitleLink(title);
        title = title.slice(2);
        titleLinks.push({name: title, href: link});
    });
    
    return titleLinks;
}

const formatTitleLink = (title: string): string =>{
    let link = title.slice(2).toLowerCase().trim().split(" ").join("-");
    link = removeSymbolsFromLink(link);
    return link;
}

const removeSymbolsFromLink = (link: string): string =>{
    symbolsToRemove.map((symbol: string) => {
        link = link.split(symbol).join("");
    });
    
    return link;
}

export default AutoGeneratedSumarry;